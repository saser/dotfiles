# Mercurial config, based on the defaults that Mercurial was shipped with.
[ui]
# name and email, e.g.
# username = Jane Doe <jdoe@example.com>
username = Christian Persson <saser@users.noreply.github.com>

# We recommend enabling tweakdefaults to get slight improvements to
# the UI over time. Make sure to set HGPLAIN in the environment when
# writing scripts!
tweakdefaults = True

# Use VSCode as the editor. The -w flag makes it wait before returning.
editor = code -w

[pager]
pager = diff-so-fancy | less --tabs=4 -RFX # The same as used for Git.

[color]
# The 'graphlog' part of this name has no meaning -- it's only used to group
# some colors together so that I can use them for my `hg xl` alias below.
graphlog.rev = yellow

[alias]
xl = log --graph --template '{label("graphlog.rev", node|short)} {desc|firstline}'

[extensions]
# These extensions are distributed together with Mercurial.
histedit =
rebase =
amend =
# These extensions need to be installed separately.
evolve =
hggit =

[hooks]
# This is a bit of a nasty hack to make sure that a work-specific .hgrc file is
# included in each work repository. It matches the setup I have for
# ~/work/.gitconfig.
#
# This solution is not mine; it was taken from
# https://stackoverflow.com/a/24195392 and then modified by me slightly.
#
# Note that if the file ~/work/.hgrc doesn't exist, `hg` will simply silently
# ignore it. This is both a blessing and a curse -- it makes the default
# workflows "just work", but it can make it more difficult to debug why
# work-specific settings aren't being set (though `hg config --source` should
# help with that).
update = if [ "$(dirname "${PWD}")" = "${HOME}/work" ] \
         && [ ! -e .hg/hgrc ] \
         && [ ! grep -q '%include ~/work/\.hgrc' .hg/hgrc ]; then \
             echo '%include ~/work/.hgrc' >>.hg/hgrc
         fi
