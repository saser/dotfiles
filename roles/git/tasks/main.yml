- name: Import platform tasks (Arch Linux)
  ansible.builtin.import_tasks: archlinux.yml
  when: ansible_distribution == 'Archlinux'

- name: Import platform tasks (macOS)
  ansible.builtin.import_tasks: macos.yml
  when: ansible_distribution == 'MacOSX'

- name: Set global git configuration values
  community.general.git_config:
    name: '{{ item.key }}'
    value: '{{ item.value }}'
    scope: global
  loop: '{{ git_config | dict2items }}'
  vars:
    git_config:
      # User settings. To override these in a work context, modify config values
      # in ~/work/.gitconfig and store all work repositories under ~/work.
      'user.name': 'Christian Persson'
      'user.email': 'saser@users.noreply.github.com'
      # Some core settings.
      'core.pager': 'diff-so-fancy | less --tabs=4 -RFX'
      'core.editor': 'code --wait'
      'init.defaultBranch': 'main'
      # Aliases.
      # amend: disabled due to `git-branchless` providing its own variant.
      # 'alias.amend': 'commit --amend'
      'alias.ane': 'commit --amend --no-edit'
      'alias.c': 'commit'
      'alias.cm': 'commit -m'
      'alias.co': 'checkout'
      'alias.cob': 'checkout -b'
      'alias.d': 'diff'
      'alias.dc': 'diff --cached'
      'alias.f': 'fetch'
      # The `--exclude=refs/branchless/*` part is to make the graphlog more
      # useful when using git-branchless
      # (https://github.com/arxanas/git-branchless/). Without this flag, the
      # graphlog shows a ton of apparently orphaned commits (probably because
      # git-branchless keeps track of them for `git undo` purposes) which makes
      # the log very difficult to parse.
      #
      # The --exclude flag needs to come before the --all flag, because the
      # behavior of --exclude is to affect future --all/--glob/etc flags. This
      # is documented in `man git-log`.
      'alias.l': 'log --oneline --decorate --graph --exclude=refs/branchless/* --all'
      'alias.push-new': '!git push -u origin $(git symbolic-ref --short HEAD)'
      'alias.remove-pruned': "!git fetch --prune && git branch -vv | awk '/: gone/{print $1}' | xargs git branch -d"
      # reword: disabled due to `git-branchless` providing its own variant.
      # 'alias.reword': 'commit --amend --edit'
      'alias.s': 'status'
      # Colors. Settings suggested by `diff-so-fancy`.
      'color.diff-highlight.newHighlight': 'green bold 52'
      'color.diff-highlight.newNormal': 'green bold'
      'color.diff-highlight.oldHighlight': 'red bold 52'
      'color.diff-highlight.oldNormal': 'red bold'
      'color.diff.commit': 'yellow bold'
      'color.diff.frag': 'magenta bold'
      'color.diff.meta': 'yellow'
      'color.diff.new': 'green bold'
      'color.diff.old': 'red bold'
      'color.diff.whitespace': 'red reverse'
      'color.ui': 'true'
      # Enables `--update-refs` by default for any `rebase` commands. A truly
      # magical flag that makes working with stacked branches _much_ easier.
      # Thanks to this article, where I learned about it:
      # https://andrewlock.net/working-with-stacked-branches-in-git-is-easier-with-update-refs/
      'rebase.updateRefs': 'true'
      # Similarly, I almost always want autosquash because I do use --fixup
      # from time to time when creating commits.
      'rebase.autosquash': 'true'
      # A better merge conflict style compared to the default one.
      # See https://jvns.ca/blog/2024/02/16/popular-git-config-options/#merge-conflictstyle-zdiff3.
      'merge.conflictstyle': 'zdiff3'

- name: Ensure that directory exists to hold work-flavored Git config file
  ansible.builtin.file:
    path: '{{ git_work_repo_dir }}'
    state: directory

- name: Ensure that a work-flavored Git config file exists at ~/work/.gitconfig
  ansible.builtin.copy:
    dest: '{{ git_work_config_file }}'
    content: '# This line is a workaround for letting Ansible create this file.'
    force: false

# This is a separate task because the loop variant above doesn't seem to support
# Jinja2 templates (the "{{ ... }}" stuff) in the dict keys.
- name: Conditionally include work-flavored configuration for repositories under ~/work
  community.general.git_config:
    # The trailing slash is important, as it expands to `/**` and therefore
    # matches everything under the directory. Without the slash, it would only
    # match a git repository located at exactly `~/work/.git`.
    name: 'includeIf.gitdir:{{ git_work_repo_dir }}/.path'
    value: '{{ git_work_config_file }}'
    scope: global

- name: Set up git aliases
  ansible.builtin.file:
    src: '{{ role_path }}/files/aliases.zsh'
    dest: '{{ zsh_env.ZSHALIASES }}/git.zsh'
    state: link
